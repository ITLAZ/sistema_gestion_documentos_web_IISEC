name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend - NestJS
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./backend  # Ruta del Backend

      - name: Wait for MongoDB to be ready
        run: |
          while ! nc -z localhost 27017; do   
            sleep 1 # Espera a que MongoDB esté disponible
          done

      - name: Check MongoDB logs
        run: docker logs $(docker ps -q --filter ancestor=mongo:latest)

      - name: Run database initialization script
        run: node src/schema/initMongoDB.js  # Ejecuta el script de inicialización desde la ruta correcta
        working-directory: ./backend

      - name: Build backend
        run: npm run start
        working-directory: ./backend

  frontend:
    name: Frontend - Node.js
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend  # Ruta del FrontEnd

      - name: Start frontend for CI
        run: |
          node app.js &
          sleep 5
          pkill -f 'node app.js' || true
        working-directory: ./frontend
